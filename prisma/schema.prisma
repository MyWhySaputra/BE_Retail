// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model kasir {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  email       String    @db.VarChar(100) @unique
  password    String    @db.VarChar(255)
  is_verified Boolean   @default(false)
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  deletedAt   DateTime?
  profile   profile[]
  receipt   receipt[]
}

model profile {
  id              Int       @id @default(autoincrement())
  kasir_id        Int       @unique
  profile_picture String    @db.VarChar(255)
  identity_type   String    @db.VarChar(100)
  identity_number String    @db.VarChar(100)
  address         String    @db.Text
  createAt        DateTime  @default(now())
  updateAt        DateTime  @updatedAt
  deletedAt       DateTime?
  kasir kasir @relation(fields: [kasir_id], references: [id])
}

model member {
  id              Int       @id @default(autoincrement())
  name            String    @db.VarChar(255)
  identity_type   String    @db.VarChar(100)
  identity_number String    @db.VarChar(100) @unique
  address         String    @db.Text
  total_point     Int       @db.Integer
  createAt        DateTime  @default(now())
  updateAt        DateTime  @updatedAt
  deletedAt       DateTime?
  receipt   receipt[]
}

model receipt {
  id                  Int       @id @default(autoincrement())
  code                String    @db.VarChar(100) @unique
  total_price         Int       @db.Integer
  cash                Int       @db.Integer
  cash_refund         Int       @db.Integer
  date                DateTime  
  point               Int       @db.Integer
  member_id           Int?      @db.Integer
  kasir_id            Int       @db.Integer
  createAt            DateTime  @default(now())
  updateAt            DateTime  @updatedAt
  deletedAt           DateTime?
  kasir kasir @relation(fields: [kasir_id], references: [id])
  member member? @relation(fields: [member_id], references: [id])
  receipt_items receipt_items[]
}

model receipt_items {
  id                      Int       @id @default(autoincrement())
  receipt_code            String    @db.VarChar(100)
  items_id                Int       @db.Integer
  quantity                Int       @db.Integer
  sub_total_price         Int       @db.Integer
  discount                Int       @db.Integer
  createAt                DateTime  @default(now())
  updateAt                DateTime  @updatedAt
  deletedAt               DateTime?
  receipt receipt @relation(fields: [receipt_code], references: [code])
  items items @relation(fields: [items_id], references: [id])
}

model items {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  price       Int       @db.Integer
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  deletedAt   DateTime?
  items_receipt   receipt_items[]
}