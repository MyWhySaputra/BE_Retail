// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  email       String    @db.VarChar(100) @unique
  password    String    @db.VarChar(255)
  role        Role      @default(USER)
  is_verified Boolean   @default(false)
  createAt    DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  deletedAt   DateTime?
  profile     profile[]
  bank_accounts bankAccounts[]
}

enum Role {
  USER
  ADMIN
}

model profile {
  id              Int       @id @default(autoincrement())
  user_id         Int       @unique
  profile_picture String    @db.VarChar(255)
  identity_type   String    @db.VarChar(100)
  identity_number String    @db.VarChar(100)
  address         String    @db.Text
  createAt        DateTime  @default(now())
  updateAt        DateTime  @updatedAt
  deletedAt       DateTime?
  user user @relation(fields: [user_id], references: [id])
}

model bankAccounts {
  id                  Int       @id @default(autoincrement())
  user_id             Int       
  bank_name           String    @db.VarChar(100)
  bank_account_number Int       @db.Integer @unique
  balance             Int       @db.Integer
  createAt            DateTime  @default(now())
  updateAt            DateTime  @updatedAt
  deletedAt           DateTime?
  user user @relation(fields: [user_id], references: [id])
  source       transactions[] @relation("transactionSourceAccount")
  destination  transactions[] @relation("transactionDestinationAccount")
}

model transactions {
  id                      Int       @id @default(autoincrement())
  source_bank_number      Int       @db.Integer
  destination_bank_number Int       @db.Integer
  amount                  Int       @db.Integer
  createAt                DateTime  @default(now())
  updateAt                DateTime  @updatedAt
  deletedAt               DateTime?
  bank_account_source      bankAccounts @relation(name: "transactionSourceAccount", fields: [source_bank_number], references: [bank_account_number])
  bank_account_destination bankAccounts @relation(name: "transactionDestinationAccount", fields: [destination_bank_number], references: [bank_account_number])
}